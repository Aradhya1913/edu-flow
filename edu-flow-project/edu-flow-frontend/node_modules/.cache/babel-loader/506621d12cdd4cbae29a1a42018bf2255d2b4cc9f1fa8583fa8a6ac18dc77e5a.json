{"ast":null,"code":"var _jsxFileName = \"/Users/sakshitaradhya/Desktop/edu-flow-project/edu-flow-frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const res = await API.get(`/session/user/${user._id}`);\n        setLogs(res.data);\n      } catch (err) {\n        console.error('Error fetching logs', err);\n      }\n    };\n    fetchLogs();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Session Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Emotion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Engagement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2 border\",\n            children: log.emotion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2 border\",\n            children: log.engagement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-2 border\",\n            children: new Date(log.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, log._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","Dashboard","_s","user","JSON","parse","localStorage","getItem","logs","setLogs","fetchLogs","res","get","_id","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","emotion","engagement","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/sakshitaradhya/Desktop/edu-flow-project/edu-flow-frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport API from '../api';\n\nconst Dashboard = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const res = await API.get(`/session/user/${user._id}`);\n        setLogs(res.data);\n      } catch (err) {\n        console.error('Error fetching logs', err);\n      }\n    };\n    fetchLogs();\n  }, [user]);\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl font-bold mb-4\">Session Logs</h2>\n      <table className=\"w-full border\">\n        <thead>\n          <tr className=\"bg-gray-200\">\n            <th className=\"p-2 border\">Emotion</th>\n            <th className=\"p-2 border\">Engagement</th>\n            <th className=\"p-2 border\">Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log) => (\n            <tr key={log._id} className=\"text-center\">\n              <td className=\"p-2 border\">{log.emotion}</td>\n              <td className=\"p-2 border\">{log.engagement}</td>\n              <td className=\"p-2 border\">{new Date(log.timestamp).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}